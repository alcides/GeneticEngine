[project]
name = "GeneticEngine"
version = "0.8.7"
description = "Genetic Programming with Types and Grammars"
authors = [
    { name = "Alcides Fonseca et al.", email = "me@alcidesfonseca.com" },
]
readme = "Readme.md"
requires-python = ">=3.10"
keywords = [
    "program synthesis", "machine learning", "genetic programming"
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    'dill==0.4.0',
    'lark==1.2.2',
    'loguru==0.7.3',
    'numpy==2.2.6',
    'palettable==3.3.3',
    'pandas==2.3.1',
    'pathos==0.3.4',
    'polyleven==0.9.0',
    'pytest==8.4.1',
    'pytest-benchmark==5.1.0',
    'scikit-learn==1.6.1',
    'seaborn==0.13.2',
    'sympy==1.14.0',
    'threadpoolctl==3.6.0',
    'z3-solver==4.15.1.0',
]

[project.urls]
homepage = "https://github.com/alcides/GeneticEngine/"
repository = "https://github.com/alcides/GeneticEngine/"
documentation = "https://github.com/alcides/GeneticEngine/"

[project.license]
text = "https://opensource.org/licenses/MIT"

[project.optional-dependencies]
dev = [
    "black",
    "docformatter",
    "mypy==1.17.0",
    "pre-commit",
    "pycln",
    "pytest",
    "pytest-codspeed",
    "pytest-cov",
    "ruff"
]

[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools >= 67.6.0']

[tool.setuptools]
py-modules = ["geneticengine", "geml", "examples"]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]

[tool.setuptools.package-data]
'examples' = ['*.csv']

[tool.docformatter]
syntax = 'google'
black = true
recursive = true
docstring-length = [60, 100]
blank = false
pre-summary-newline = true
close-quotes-on-newline = true
wrap-one-line = true

[tool.black]
line-length = 120


[tool.pycln]
all = true

[tool.ruff]
line-length = 120

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = ["E741", "E501"]

per-file-ignores = {}


[tool.ruff.lint.flake8-import-conventions.aliases]
altair = "alt"
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
seaborn = "sns"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
